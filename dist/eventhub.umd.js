!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("isomorphic-ws"),require("events")):"function"==typeof define&&define.amd?define(["isomorphic-ws","events"],e):t.Eventhub=e(t.WebSocket,t.events)}(this,function(t,e){var s,i;t=t&&t.hasOwnProperty("default")?t.default:t,e=e&&e.hasOwnProperty("default")?e.default:e,function(t){t.PUBLISH="publish",t.SUBSCRIBE="subscribe",t.UNSUBSCRIBE="unsubscribe",t.UNSUBSCRIBE_ALL="unsubscribeAll",t.LIST="list",t.HISTORY="history",t.PING="ping",t.DISCONNECT="disconnect"}(s||(s={})),function(t){t.CONNECT="connect",t.RECONNECT="reconnect",t.DISCONNECT="disconnect",t.OFFLINE="offline"}(i||(i={}));var n=function(){this.pingInterval=1e4,this.pingTimeout=3e3,this.maxFailedPings=3,this.reconnectInterval=1e4,this.disablePingCheck=!1};return function(e){function r(t,s,i){e.call(this),this._rpcResponseCounter=0,this._rpcCallbackList=[],this._subscriptionCallbackList=[],this._sentPingsList=[],this._wsUrl=t+"/?auth="+s,this._socket=void 0,this._isConnected=!1,this._opts=new n,Object.assign(this._opts,i)}return e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r,r.prototype.connect=function(){var e=this;return new Promise(function(s,n){e._socket=new t(e._wsUrl),e._socket.onmessage=e._parseRPCResponse.bind(e),e._socket.onopen=function(){this.emit(i.CONNECT),this._isConnected=!0,this._opts.disablePingCheck||this._startPingMonitor(),s(!0)}.bind(e),e._socket.onerror=function(t){this.emit(i.OFFLINE,t),this._isConnected?(console.log("Eventhub WebSocket connection error:",t),this._isConnected=!1,this._reconnect()):n(t)}.bind(e),e._socket.onclose=function(t){this._isConnected&&(this.emit(i.OFFLINE,t),this._isConnected=!1,this._reconnect())}.bind(e)})},r.prototype._reconnect=function(){var e=this;if(!this._isConnected){this.emit(i.RECONNECT);var s=this._opts.reconnectInterval;this._socket.readyState!=t.CLOSED&&this._socket.readyState!=t.CLOSING&&this._socket.close(),this._opts.disablePingCheck||(clearInterval(this._pingTimer),clearInterval(this._pingTimeOutTimer),this._sentPingsList=[]),this.connect().then(function(t){var s=e._subscriptionCallbackList.slice();e._rpcResponseCounter=0,e._rpcCallbackList=[],e._subscriptionCallbackList=[];for(var i=0,n=s;i<n.length;i+=1){var r=n[i];e.subscribe(r.topic,r.callback,{sinceEventId:r.lastRecvMessageId})}}).catch(function(t){setTimeout(e._reconnect.bind(e),s)})}},r.prototype._startPingMonitor=function(){var t=this._opts.pingInterval,e=this._opts.maxFailedPings;this._pingTimer=setInterval(function(){var t=this;if(this._isConnected){var e={timestamp:Date.now(),rpcRequestId:this._rpcResponseCounter+1};this._sentPingsList.push(e),this._sendRPCRequest(s.PING,[]).then(function(s){for(var i=0;i<t._sentPingsList.length;i++)t._sentPingsList[i].rpcRequestId==e.rpcRequestId&&t._sentPingsList.splice(i,1)})}}.bind(this),t),this._pingTimeOutTimer=setInterval(function(){for(var t=Date.now(),s=0,i=0;i<this._sentPingsList.length;i++)t>this._sentPingsList[i].timestamp+this._opts.pingTimeout&&s++;s>=e&&(this._isConnected=!1,this._reconnect())}.bind(this),t)},r.prototype._sendRPCRequest=function(e,s){var i=this;this._rpcResponseCounter++;var n={id:this._rpcResponseCounter,jsonrpc:"2.0",method:e,params:s};return new Promise(function(e,s){if(i._socket.readyState==t.OPEN){i._rpcCallbackList.push([i._rpcResponseCounter,function(t,i){null!=t?s(t):e(i)}.bind(i)]);try{i._socket.send(JSON.stringify(n))}catch(t){s(t)}}else s(new Error("WebSocket is not connected."))})},r.prototype._parseRPCResponse=function(t){try{var e=JSON.parse(t.data);if(!e.hasOwnProperty("id")||"null"==e.id)return;if(e.hasOwnProperty("result")&&e.result.hasOwnProperty("message")&&e.result.hasOwnProperty("topic"))for(var s=0,i=this._subscriptionCallbackList;s<i.length;s+=1){var n=i[s];if(n.rpcRequestId==e.id)return n.lastRecvMessageId=e.result.id,void n.callback(e.result)}for(var r=void 0,o=0,c=this._rpcCallbackList;o<c.length;o+=1){var a=c[o];if(a[0]==e.id){r=a[1];break}}if(void 0===r)return;e.hasOwnProperty("error")?r(e.error,null):e.hasOwnProperty("result")&&r(null,e.result);for(var p=0;p<this._rpcCallbackList.length;p++)this._rpcCallbackList[p][0]==e.id&&this._rpcCallbackList.splice(p,1)}catch(t){return void console.log("Failed to parse websocket response:",t)}},r.prototype.isSubscribed=function(t){for(var e=0,s=this._subscriptionCallbackList;e<s.length;e+=1)if(s[e].topic==t)return!0;return!1},r.prototype.subscribe=function(t,e,i){var n={topic:t};return""==t?new Promise(function(t,e){e(new Error("Topic cannot be empty."))}):(void 0!==i&&(n=Object.assign(n,i)),this.isSubscribed(t)?new Promise(function(e,s){s(new Error("Already subscribed to "+t))}):(this._subscriptionCallbackList.push({topic:t,rpcRequestId:this._rpcResponseCounter+1,callback:e}),this._sendRPCRequest(s.SUBSCRIBE,n)))},r.prototype.unsubscribe=function(t){var e=[];if("string"==typeof t?e.push(t):e=t,e.length>0){for(var i=0,n=e;i<n.length;i+=1)for(var r=n[i],o=0;o<this._subscriptionCallbackList.length;o++)r==this._subscriptionCallbackList[o].topic&&this._subscriptionCallbackList.splice(o,1);this._sendRPCRequest(s.UNSUBSCRIBE,e)}},r.prototype.unsubscribeAll=function(){this._subscriptionCallbackList=[],this._sendRPCRequest(s.UNSUBSCRIBE_ALL,[])},r.prototype.publish=function(t,e,i){var n={topic:t,message:e};return void 0!==i&&(n=Object.assign(n,i)),this._sendRPCRequest(s.PUBLISH,n)},r.prototype.listSubscriptions=function(){return this._sendRPCRequest(s.LIST,[])},r.prototype.disconnect=function(){this._isConnected=!1;var t=this._sendRPCRequest(s.DISCONNECT,[]);return this.emit(i.DISCONNECT),t},r}(e)});
//# sourceMappingURL=eventhub.umd.js.map
